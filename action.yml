name: rustup toolchain install
author: David Tolnay
description: Install the Rust toolchain
branding:
  icon: activity
  color: purple

inputs:
  toolchain:
    description: Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
    required: true
  targets:
    description: Comma-separated list of target triples to install for this toolchain
    required: false
  target:
    description: Alias for `targets`
    required: false
  components:
    description: Comma-separated list of components to be additionally installed
    required: false

outputs:
  cachekey:
    description: A short hash of the rustc version, appropriate for use as a cache key. "20220627a831"
    value: ${{steps.rustc-version.outputs.cachekey}}

runs:
  using: composite
  steps:
    - id: flags
      run: |
        : construct rustup command line
        echo "::set-output name=targets::$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)"
        echo "::set-output name=components::$(for c in ${components//,/ }; do echo -n ' --component' $c; done)"
        echo "::set-output name=downgrade::${{inputs.toolchain == 'nightly' && inputs.components && ' --allow-downgrade' || ''}}"
      env:
        targets: ${{inputs.targets || inputs.target || ''}}
        components: ${{inputs.components}}
      shell: bash

    - run: |
        : install rustup if needed
        if ! command -v rustup &> /dev/null ; then
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
          echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH
        fi
      if: runner.os != 'Windows'
      shell: bash

    - name: rustup toolchain install ${{inputs.toolchain}}
      run: rustup toolchain install ${{inputs.toolchain}}${{steps.flags.outputs.targets}}${{steps.flags.outputs.components}} --profile minimal${{steps.flags.outputs.downgrade}} --no-self-update
      shell: bash

    - run: rustup default ${{inputs.toolchain}}
      shell: bash

    - id: rustc-version
      run: |
        : create cachekey
        DATE=$(rustc +${{inputs.toolchain}} --version --verbose | sed -ne 's/^commit-date: \(20[0-9][0-9]\)-\([01][0-9]\)-\([0-3][0-9]\)$/\1\2\3/p')
        HASH=$(rustc +${{inputs.toolchain}} --version --verbose | sed -ne 's/^commit-hash: //p')
        echo "::set-output name=cachekey::$(echo $DATE$HASH | head -c12)"
      shell: bash

    - run: |
        : disable incremental compilation
        echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV
      shell: bash

    - run: rustc +${{inputs.toolchain}} --version --verbose
      shell: bash
